{"version":3,"sources":["ensnme.support.js"],"names":["cagd","require","depher","falzy","kein","nmde","shft","DEFAULT_NAME","ensnme","entity","resolve","name","Error","parameter","arguments","STRING","FUNCTION","module","exports"],"mappings":"AAAA;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmEA,IAAMA,OAAOC,QAAS,MAAT,CAAb;AACA,IAAMC,SAASD,QAAS,QAAT,CAAf;AACA,IAAME,QAAQF,QAAS,OAAT,CAAd;AACA,IAAMG,OAAOH,QAAS,MAAT,CAAb;AACA,IAAMI,OAAOJ,QAAS,MAAT,CAAb;AACA,IAAMK,OAAOL,QAAS,MAAT,CAAb;;AAEA,IAAMM,eAAe,WAArB;;AAEA,IAAMC,SAAS,SAASA,MAAT,CAAiBC,MAAjB,EAAyBC,OAAzB,EAAkCC,IAAlC,EAAwC;AACtD;;;;;;;;;;AAUA,KAAIR,MAAOM,MAAP,CAAJ,EAAqB;AACpB,QAAM,IAAIG,KAAJ,CAAW,gBAAX,CAAN;AACA;;AAED,KAAIC,YAAYP,KAAMQ,SAAN,CAAhB;;AAEAH,QAAOT,OAAQW,SAAR,EAAmBE,MAAnB,EAA2B,EAA3B,CAAP;;AAEAL,WAAUR,OAAQW,SAAR,EAAmBG,QAAnB,EAA6B,SAASN,OAAT,CAAkBD,MAAlB,EAA0BE,IAA1B,EAAgC;AACtEX,OAAM,MAAN,EAAcK,KAAMI,MAAN,KAAkBE,IAAlB,IAA0BJ,YAAxC,EAAsDE,MAAtD;;AAEA,SAAOA,MAAP;AACA,EAJS,CAAV;;AAMA;;;;;;;AAOA,KAAI,CAACL,KAAM,MAAN,EAAcK,MAAd,CAAD,IAA2BN,MAAOM,OAAOE,IAAd,CAA/B,EAAqD;AACpD,SAAOD,QAASD,MAAT,EAAiBE,IAAjB,CAAP;AACA;;AAED,QAAOF,MAAP;AACA,CArCD;;AAuCAQ,OAAOC,OAAP,GAAiBV,MAAjB","file":"ensnme.support.js","sourcesContent":["\"use strict\";\n\n/*;\n\t@module-license:\n\t\tThe MIT License (MIT)\n\t\t@mit-license\n\n\t\tCopyright (@c) 2017 Richeve Siodina Bebedor\n\t\t@email: richeve.bebedor@gmail.com\n\n\t\tPermission is hereby granted, free of charge, to any person obtaining a copy\n\t\tof this software and associated documentation files (the \"Software\"), to deal\n\t\tin the Software without restriction, including without limitation the rights\n\t\tto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\t\tcopies of the Software, and to permit persons to whom the Software is\n\t\tfurnished to do so, subject to the following conditions:\n\n\t\tThe above copyright notice and this permission notice shall be included in all\n\t\tcopies or substantial portions of the Software.\n\n\t\tTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\t\tIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\t\tFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\t\tAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\t\tLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\t\tOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n\t\tSOFTWARE.\n\t@end-module-license\n\n\t@module-configuration:\n\t\t{\n\t\t\t\"package\": \"ensnme\",\n\t\t\t\"path\": \"ensnme/ensnme.js\",\n\t\t\t\"file\": \"ensnme.js\",\n\t\t\t\"module\": \"ensnme\",\n\t\t\t\"author\": \"Richeve S. Bebedor\",\n\t\t\t\"eMail\": \"richeve.bebedor@gmail.com\",\n\t\t\t\"contributors\": [\n\t\t\t\t\"John Lenon Maghanoy <johnlenonmaghanoy@gmail.com>\",\n\t\t\t\t\"Vinse Vinalon <vinsevinalon@gmail.com>\"\n\t\t\t],\n\t\t\t\"repository\": \"https://github.com/volkovasystems/ensnme.git\",\n\t\t\t\"test\": \"ensnme-test.js\",\n\t\t\t\"global\": true\n\t\t}\n\t@end-module-configuration\n\n\t@module-documentation:\n\t\tEnsure name exists.\n\n\t\tA resolve function can be passed to resolve the name of the entity based on entity.\n\t\tResolve function accepts the entity and an overrdding name.\n\t\tResolve function must return the entity.\n\n\t\tThis will always return the entity.\n\t@end-module-documentation\n\n\t@include:\n\t\t{\n\t\t\t\"cagd\": \"cagd\",\n\t\t\t\"depher\": \"depher\",\n\t\t\t\"falzy\": \"falzy\",\n\t\t\t\"kein\": \"kein\",\n\t\t\t\"nmde\": \"nmde\",\n\t\t\t\"shft\": \"shft\"\n\t\t}\n\t@end-include\n*/\n\nconst cagd = require( \"cagd\" );\nconst depher = require( \"depher\" );\nconst falzy = require( \"falzy\" );\nconst kein = require( \"kein\" );\nconst nmde = require( \"nmde\" );\nconst shft = require( \"shft\" );\n\nconst DEFAULT_NAME = \"procedure\";\n\nconst ensnme = function ensnme( entity, resolve, name ){\n\t/*;\n\t\t@meta-configuration:\n\t\t\t{\n\t\t\t\t\"entity:required\": \"*\",\n\t\t\t\t\"resolve\": \"function\",\n\t\t\t\t\"name\": \"string\"\n\t\t\t}\n\t\t@end-meta-configuration\n\t*/\n\n\tif( falzy( entity ) ){\n\t\tthrow new Error( \"invalid entity\" );\n\t}\n\n\tlet parameter = shft( arguments );\n\n\tname = depher( parameter, STRING, \"\" );\n\n\tresolve = depher( parameter, FUNCTION, function resolve( entity, name ){\n\t\tcagd( \"name\", nmde( entity ) || name || DEFAULT_NAME, entity );\n\n\t\treturn entity;\n\t} );\n\n\t/*;\n\t\t@note:\n\t\t\tThis module just ensure the property name exists on the function.\n\t\t\tThis will not check if the type of name is incorrect.\n\t\t\tIssues will arise based from overriding incorrect type of name.\n\t\t@end-note\n\t*/\n\tif( !kein( \"name\", entity ) || falzy( entity.name ) ){\n\t\treturn resolve( entity, name );\n\t}\n\n\treturn entity;\n};\n\nmodule.exports = ensnme;\n"]}